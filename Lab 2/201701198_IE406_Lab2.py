# -*- coding: utf-8 -*-
"""Lab 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IfMh62EAENb8SdbAkR3UlnC6VhzPmM92

**Author : Dharmin Solanki (ID : 201701198)**

Mounting the Google Drive.
"""

from google.colab import drive
drive.mount('/content/drive/')

"""Importing Libraries"""

from sympy import *
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
from mpl_toolkits.mplot3d import Axes3D
import random

"""Loading the Data from file and normalizing it."""

df = pd.read_excel('/content/drive/My Drive/IE406- ML- Labs/Lab 2/DataForProblem2.xlsx')

x = np.array(df['x'])
y = np.array(df['y'])

x =x- np.mean(x)
x =x/np.std(x)

"""Some Declaration for **number of iterations** and value of **the learning rate**:"""

n1=1000 #number of iterations for gradient descent and stochastic descent
n2=100  #number of iterations for gradient descent and stochastic descent
n3=5    #number of iterations for steepest gradient descent. However, this will take time to compute.
n4=10   #number of iterations for steepest gradient descent. However, this will take time to compute.
a1=0.1  #learning rate
a2=0.01 #learning rate

"""**############################################################################################**

**Question-1 : Find minima of following functions using Gradient Descent Approach where α₁ = 0.1 and α₂ = 0.01.**

> Function for one parameter of the Gradient Descent Approach.
"""

def gradient_one(L,n,a):
  
  theta0 = Symbol('theta0')
  val = 8
  L_final = [0]*n

  dL = diff(L,theta0)

  iterations = np.arange(0,n,1)

  for i in range(n):
    temp = val - a*(dL.subs(theta0,val))
    val = temp
    L_final[i]= L.subs(theta0,val)

  return iterations, L_final, val

"""> Function for two parameters of the Gradient Descent Approach."""

def gradient_two(L,n,a):
  
  theta0 = Symbol('theta0')
  theta1 = Symbol('theta1')

  val0 = 7
  val1 = 3
  L_final = [0]*n

  dL0 = diff(L,theta0)
  dL1 = diff(L,theta1)

  iterations = np.arange(0,n,1)

  for i in range(n):
    temp0 = val0 - a*( dL0.subs( {theta0: val0, theta1: val1} ) )
    val0 = temp0
    temp1 = val1 - a*( dL1.subs( {theta0: val0, theta1: val1} ) )
    val1 = temp1
    L_final[i]= L.subs( {theta0: val0, theta1: val1} )

  return iterations, L_final, val0, val1

"""**-------------------------------------------------------------------------------------------**

>>**A)** L(θ) = θ²

>>> (i) N=1000, α=0.1
"""

theta0=Symbol('theta0')

L = theta0**2

iterations, L_final, val = gradient_one(L,n1,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 1000')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

""">>> (ii) N=1000, α=0.01"""

theta0=Symbol('theta0')

L = theta0**2

iterations, L_final, val = gradient_one(L,n1,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 1000')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

""">>> (iii) N=100, α=0.1"""

theta0=Symbol('theta0')

L = theta0**2

iterations, L_final, val = gradient_one(L,n2,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 100')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

""">>> (iv) N=100, α=0.01"""

theta0=Symbol('theta0')

L = theta0**2

iterations, L_final, val = gradient_one(L,n2,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 100')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

"""**-------------------------------------------------------------------------------------------**

>>**B)** L(θ) = θ₁² + θ₂²

>>> (i) N=1000, α=0.1
"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = theta1**2 + theta2**2

iterations, L_final, val0, val1 = gradient_two(L,n1,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 1000')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}\N{SUPERSCRIPT TWO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (ii) N=1000, α=0.01"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = theta1**2 + theta2**2

iterations, L_final, val0, val1 = gradient_two(L,n1,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 1000')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}\N{SUPERSCRIPT TWO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (iii) N=100, α=0.1"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = theta1**2 + theta2**2

iterations, L_final, val0, val1 = gradient_two(L,n2,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 100')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}\N{SUPERSCRIPT TWO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (iv) N=100, α=0.01"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = theta1**2 + theta2**2

iterations, L_final, val0, val1 = gradient_two(L,n2,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 100')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}\N{SUPERSCRIPT TWO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

"""**-------------------------------------------------------------------------------------------**

>>**C)** L(θ) = (θ-1)²

>>> (i) N=1000, α=0.1
"""

theta0=Symbol('theta0')

L = (theta0-1)**2

iterations, L_final, val = gradient_one(L,n1,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 1000')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = (\N{GREEK SMALL LETTER THETA}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

""">>> (ii) N=1000, α=0.01"""

theta0=Symbol('theta0')

L = (theta0-1)**2

iterations, L_final, val = gradient_one(L,n1,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 1000')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = (\N{GREEK SMALL LETTER THETA}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

""">>> (iii) N=100, α=0.1"""

theta0=Symbol('theta0')

L = (theta0-1)**2

iterations, L_final, val = gradient_one(L,n2,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 100')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = (\N{GREEK SMALL LETTER THETA}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

""">>> (iv) N=100, α=0.01"""

theta0=Symbol('theta0')

L = (theta0-1)**2

iterations, L_final, val = gradient_one(L,n2,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 100')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = (\N{GREEK SMALL LETTER THETA}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

"""**-------------------------------------------------------------------------------------------**

>>**D)** L(θ) = 2(θ₁-1)² + 2(θ₂-1)²

>>> (i) N=1000, α=0.1
"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = 2*((theta1-1)**2 + (theta2-1)**2)

iterations, L_final, val0, val1 = gradient_two(L,n1,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 1000')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}-1)\N{SUPERSCRIPT TWO} + 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (ii) N=1000, α=0.01"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = 2*((theta1-1)**2 + (theta2-1)**2)

iterations, L_final, val0, val1 = gradient_two(L,n1,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 1000')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}-1)\N{SUPERSCRIPT TWO} + 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (iii) N=100, α=0.1"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = 2*((theta1-1)**2 + (theta2-1)**2)

iterations, L_final, val0, val1 = gradient_two(L,n2,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 100')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}-1)\N{SUPERSCRIPT TWO} + 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (iv) N=100, α=0.01"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = 2*((theta1-1)**2 + (theta2-1)**2)

iterations, L_final, val0, val1 = gradient_two(L,n2,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 100')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}-1)\N{SUPERSCRIPT TWO} + 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

"""**-------------------------------------------------------------------------------------------**

>>**E)** L(θ) = Σ [ y - (θ₀ + θ₁•x) ]²

>>> (i) N=1000, α=0.1
"""

theta0=Symbol('theta0')
theta1=Symbol('theta1')

l1 = theta0 + theta1*x
l2 = y - l1
L = np.sum(l2**2)

iterations, L_final, val0, val1 = gradient_two(L,n1,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 1000')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK CAPITAL LETTER SIGMA} [y-(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}•x)]\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (ii) N=1000, α=0.01"""

theta0=Symbol('theta0')
theta1=Symbol('theta1')

l1 = theta0 + theta1*x
l2 = y - l1
L = np.sum(l2**2)

iterations, L_final, val0, val1 = gradient_two(L,n1,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 1000')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK CAPITAL LETTER SIGMA} [y-(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}•x)]\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (iii) N=100, α=0.1"""

theta0=Symbol('theta0')
theta1=Symbol('theta1')

l1 = theta0 + theta1*x
l2 = y - l1
L = np.sum(l2**2)

iterations, L_final, val0, val1 = gradient_two(L,n2,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 100')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK CAPITAL LETTER SIGMA} [y-(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}•x)]\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (iv) N=100, α=0.01"""

theta0=Symbol('theta0')
theta1=Symbol('theta1')

l1 = theta0 + theta1*x
l2 = y - l1
L = np.sum(l2**2)

iterations, L_final, val0, val1 = gradient_two(L,n2,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 100')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK CAPITAL LETTER SIGMA} [y-(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}•x)]\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

"""**############################################################################################**

**Question-2 : Find minima of the function L(θ) = Σ [y-(θ₀ + θ₁•x)]² using Stochastic Descent Approach using different learning rates and number of iterations.**

> Function for Stochastic Descent Approach.
"""

def stochastic(x,y,n,a):
  
  theta0 = Symbol('theta0')
  theta1 = Symbol('theta1')

  val0 = 7
  val1 = 3
  L_final = [0]*n

  iterations = np.arange(0,n,1)

  rndm_x = random.sample(range(0,len(x)), len(x))

  for i in range(n):
    t1 = i % len(x)
    l1 = (theta0 + theta1*x[rndm_x[t1]])
    l2 = y[rndm_x[t1]]
    L=(l2-l1)**2
    dL0 = diff(L,theta0)
    dL1 = diff(L,theta1)
    temp0 = val0 - a*( dL0.subs( {theta0: val0, theta1: val1} ) )
    val0 = temp0
    temp1 = val1 - a*( dL1.subs( {theta0: val0, theta1: val1} ) )
    val1 = temp1
    L_final[i]= L.subs( {theta0: val0, theta1: val1} )

  return iterations, L_final, val0, val1

""">> (i) N=1000, α=0.1"""

theta0=Symbol('theta0')
theta1=Symbol('theta1')

iterations, L_final, val0, val1 = stochastic(x,y,n1,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 1000')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK CAPITAL LETTER SIGMA} [y-(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}•x)]\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">> (ii) N=1000, α=0.01"""

theta0=Symbol('theta0')
theta1=Symbol('theta1')

iterations, L_final, val0, val1 = stochastic(x,y,n1,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 1000')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK CAPITAL LETTER SIGMA} [y-(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}•x)]\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">> (iii) N=100, α=0.1"""

theta0=Symbol('theta0')
theta1=Symbol('theta1')

iterations, L_final, val0, val1 = stochastic(x,y,n2,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 100')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK CAPITAL LETTER SIGMA} [y-(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}•x)]\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">> (iv) N=100, α=0.01"""

theta0=Symbol('theta0')
theta1=Symbol('theta1')

iterations, L_final, val0, val1 = stochastic(x,y,n2,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 100')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK CAPITAL LETTER SIGMA} [y-(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}•x)]\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

"""**############################################################################################**

**Question-3 : Find minima of the following functions using Steepest Descent Approach using different learning rates and number of iterations.**

> Function for one parameter of the Steepest Descent Approach.
"""

def steepest_one(L,n,a):
  
  theta0 = Symbol('theta0')
  val = 8
  L_final = [0]*n

  dL = diff(L,theta0)
  
  alpha = Symbol('alpha')
  at1 = L.subs(theta0, theta0-(alpha*dL))
  at2 = diff(at1, alpha)  
  at3 = diff(at2, alpha)
  at4 = at2/at3   

  iterations = np.arange(0,n,1)

  for i in range(n):
    for j in range(n):
      a = a - at4.subs({alpha:a, theta0:val})
    temp = val - a*(dL.subs(theta0,val))
    val = temp
    L_final[i]= L.subs(theta0,val)

  return iterations, L_final, val

"""> Function for two parameters of the Steepest Descent Approach."""

def steepest_two(L,n,a):
  
  theta0 = Symbol('theta0')
  theta1 = Symbol('theta1')

  val0 = 7
  val1 = 3
  L_final = [0]*n

  dL0 = diff(L,theta0)
  dL1 = diff(L,theta1)

  alpha = Symbol('alpha')
  at1 = L.subs({theta0: theta0-(alpha*dL0), theta1: theta1-(alpha*dL1)})
  at2 = diff(at1, alpha)  
  at3 = diff(at2, alpha)
  at4 = at2/at3   

  iterations = np.arange(0,n,1)

  for i in range(n):
    for j in range(n):
      a = a - at4.subs({alpha:a, theta0:val0, theta1:val1})
    temp0 = val0 - a*( dL0.subs( {theta0: val0, theta1: val1} ) )
    val0 = temp0
    temp1 = val1 - a*( dL1.subs( {theta0: val0, theta1: val1} ) )
    val1 = temp1
    L_final[i]= L.subs( {theta0: val0, theta1: val1} )

  return iterations, L_final, val0, val1

"""**-------------------------------------------------------------------------------------------**

>>**A)** L(θ) = θ²

>>> (i) N=5, α=0.1
"""

theta0=Symbol('theta0')

L = theta0**2

iterations, L_final, val = steepest_one(L,n3,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 5')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

""">>> (ii) N=5, α=0.01"""

theta0=Symbol('theta0')

L = theta0**2

iterations, L_final, val = steepest_one(L,n3,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 5')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

""">>> (iii) N=10, α=0.1"""

theta0=Symbol('theta0')

L = theta0**2

iterations, L_final, val = steepest_one(L,n4,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 10')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

""">>> (iv) N=10, α=0.01"""

theta0=Symbol('theta0')

L = theta0**2

iterations, L_final, val = steepest_one(L,n4,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 10')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

"""**-------------------------------------------------------------------------------------------**

>>**B)** L(θ) = θ₁² + θ₂²

>>> (i) N=5, α=0.1
"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = theta1**2 + theta2**2

iterations, L_final, val0, val1 = steepest_two(L,n3,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 5')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}\N{SUPERSCRIPT TWO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (ii) N=5, α=0.01"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = theta1**2 + theta2**2

iterations, L_final, val0, val1 = steepest_two(L,n3,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 5')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}\N{SUPERSCRIPT TWO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (iii) N=10, α=0.1"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = theta1**2 + theta2**2

iterations, L_final, val0, val1 = steepest_two(L,n4,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 10')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}\N{SUPERSCRIPT TWO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (iv) N=10, α=0.01"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = theta1**2 + theta2**2

iterations, L_final, val0, val1 = steepest_two(L,n4,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 10')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}\N{SUPERSCRIPT TWO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

"""**-------------------------------------------------------------------------------------------**

>>**C)** L(θ) = (θ-1)²

>>> (i) N=5, α=0.1
"""

theta0=Symbol('theta0')

L = (theta0-1)**2

iterations, L_final, val = steepest_one(L,n3,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 5')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = (\N{GREEK SMALL LETTER THETA}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

""">>> (ii) N=5, α=0.01"""

theta0=Symbol('theta0')

L = (theta0-1)**2

iterations, L_final, val = steepest_one(L,n3,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 5')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = (\N{GREEK SMALL LETTER THETA}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

""">>> (iii) N=10, α=0.1"""

theta0=Symbol('theta0')

L = (theta0-1)**2

iterations, L_final, val = steepest_one(L,n4,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 10')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = (\N{GREEK SMALL LETTER THETA}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

""">>> (iv) N=10, α=0.01"""

theta0=Symbol('theta0')

L = (theta0-1)**2

iterations, L_final, val = steepest_one(L,n4,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 10')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = (\N{GREEK SMALL LETTER THETA}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}    ----->   \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}  =', val)
print('Minimum L(\N{GREEK SMALL LETTER THETA}) -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}) =', min(L_final))

"""**-------------------------------------------------------------------------------------------**

>>**D)** L(θ) = 2(θ₁-1)² + 2(θ₂-1)²

>>> (i) N=5, α=0.1
"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = 2*((theta1-1)**2 + (theta2-1)**2)

iterations, L_final, val0, val1 = steepest_two(L,n3,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 5')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}-1)\N{SUPERSCRIPT TWO} + 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (ii) N=5, α=0.01"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = 2*((theta1-1)**2 + (theta2-1)**2)

iterations, L_final, val0, val1 = steepest_two(L,n3,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 5')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}-1)\N{SUPERSCRIPT TWO} + 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (iii) N=10, α=0.1"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = 2*((theta1-1)**2 + (theta2-1)**2)

iterations, L_final, val0, val1 = steepest_two(L,n4,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 10')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}-1)\N{SUPERSCRIPT TWO} + 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (iv) N=10, α=0.01"""

theta1=Symbol('theta0')
theta2=Symbol('theta1')

L = 2*((theta1-1)**2 + (theta2-1)**2)

iterations, L_final, val0, val1 = steepest_two(L,n4,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 10')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}-1)\N{SUPERSCRIPT TWO} + 2(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}-1)\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

"""**-------------------------------------------------------------------------------------------**

>>**E)** L(θ) = Σ [ y - (θ₀ + θ₁•x) ]²

>>> (i) N=5, α=0.1
"""

theta0=Symbol('theta0')
theta1=Symbol('theta1')

l1 = theta0 + theta1*x
l2 = y - l1
L = np.sum(l2**2)

iterations, L_final, val0, val1 = steepest_two(L,n3,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 5')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK CAPITAL LETTER SIGMA} [y-(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}•x)]\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (ii) N=5, α=0.01"""

theta0=Symbol('theta0')
theta1=Symbol('theta1')

l1 = theta0 + theta1*x
l2 = y - l1
L = np.sum(l2**2)

iterations, L_final, val0, val1 = steepest_two(L,n3,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 5')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK CAPITAL LETTER SIGMA} [y-(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}•x)]\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (iii) N=10, α=0.1"""

theta0=Symbol('theta0')
theta1=Symbol('theta1')

l1 = theta0 + theta1*x
l2 = y - l1
L = np.sum(l2**2)

iterations, L_final, val0, val1 = steepest_two(L,n4,a1)

plt.plot(iterations, L_final)
plt.xlabel('N = 10')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK CAPITAL LETTER SIGMA} [y-(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}•x)]\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.1')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

""">>> (iv) N=10, α=0.01"""

theta0=Symbol('theta0')
theta1=Symbol('theta1')

l1 = theta0 + theta1*x
l2 = y - l1
L = np.sum(l2**2)

iterations, L_final, val0, val1 = steepest_two(L,n4,a2)

plt.plot(iterations, L_final)
plt.xlabel('N = 10')
plt.ylabel('L(\N{GREEK SMALL LETTER THETA}) = \N{GREEK CAPITAL LETTER SIGMA} [y-(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO} + \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}•x)]\N{SUPERSCRIPT TWO}')
plt.title('\N{GREEK SMALL LETTER ALPHA} = 0.01')
plt.show()

print()
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ZERO}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}  =', val0)
print('Minimum \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}    ----->       \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}  =', val1)
print('Minimum L(\N{GREEK SMALL LETTER THETA})  -----> L(\N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT ONE}, \N{GREEK SMALL LETTER THETA}\N{SUBSCRIPT TWO}) =', min(L_final))

"""**---------------------- END OF CODE ----------------------**"""